apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: clair-in-ci-db-build-and-trigger
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: |
            event == "push" || event == "pull_request"
    pipelinesascode.tekton.dev/task: "[buildah, git-clone]"
spec:
  timeouts:
    pipeline: "2h"
  params:
    - name: output-image
      value: quay.io/redhat-appstudio/clair-in-ci:to_test
    - name: builder-image
      value: registry.access.redhat.com/ubi9/buildah:9.0.0-19@sha256:c8b1d312815452964885680fc5bc8d99b3bfe9b6961228c71a09c72ca8e915eb
    - name: dockerfile
      value: Dockerfile
    - name: revision
      value: "{{ revision }}"
    - name: repo_url
      value: "{{ repo_url }}"
    - name: event_type
      value: "{{ event_type }}"
  pipelineSpec:
    params:
      - name: output-image
      - name: builder-image
      - name: dockerfile
      - name: revision
      - name: repo_url
      - name: event_type
    workspaces:
      - name: workspace
    tasks:
      - name: fetch-repo
        workspaces:
          - name: output
            workspace: workspace
        computeResources:
          requests:
            cpu: 100mi
        taskRef:
          name: git-clone
        params:
          - name: url
            value: "$(params.repo_url)"
          - name: revision
            value: "$(params.revision)"
      - name: calculate-tag
        params:
          - name: revision
            value: "{{ revision }}"
          - name: event_type
            value: "{{ event_type }}"
        runAfter:
          - fetch-repo
        taskSpec:
          params:
            - name: revision
              type: string
            - name: event_type
              type: string
          results:
            - name: image_tag
              description: Image tag to be used by build
          steps:
            - name: make-tag
              image: registry.access.redhat.com/ubi9
              script: |
                #!/usr/bin/env bash
                VERSION_MAJOR=v1
                # make sure you use `echo -n` otherwise random failures are waiting for you
                if [ "$(params.event_type)" == "push" ]; then
                  echo -n "${VERSION_MAJOR}.$(date --utc '+%Y%m%d%H%M%S')" | tee $(results.image_tag.path)
                else
                  echo -n "PR-$(params.revision)" | tee $(results.image_tag.path)
                fi
      - name: build-image
        timeout: "0"
        workspaces:
          - name: source
            workspace: workspace
        computeResources:
          requests:
            cpu: 1
        params:
          - name: IMAGE
            value: "quay.io/redhat-appstudio/clair-in-ci:$(tasks.calculate-tag.results.image_tag)"
          - name: BUILDER_IMAGE
            value: $(params.builder-image)
          - name: DOCKERFILE
            value: $(workspaces.source.path)/$(params.dockerfile)
          - name: BUILD_EXTRA_ARGS
            value: "--storage-driver=overlayfs2"
        runAfter:
          - calculate-tag
        taskRef:
          name: buildah
          kind: ClusterTask
      - name: trigger-tests-and-push
        computeResources:
          requests:
            cpu: 100mi
        params:
          - name: revision
            value: "{{ revision }}"
          - name: event_type
            value: "{{ event_type }}"
          - name: image_tag
            value: $(tasks.calculate-tag.results.image_tag)
        runAfter:
          - build-image
        taskSpec:
          params:
            - name: revision
              type: string
            - name: event_type
              type: string
            - name: image_tag
              type: string
          steps:
            - name: tigger-workflow
              image: registry.access.redhat.com/ubi9/python-39
              env:
                - name: GITHUB_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: integration-github-token
                      key: integration-github-token
              script: |
                #!/usr/bin/env bash
                event="pull_request"
                if [ "$(params.event_type)" == "push" ]; then
                  event="push"
                fi
                echo "Acting according to event: "$event""
                curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $GITHUB_TOKEN" --request POST --data '{"event_type":"trigger_workflow", "client_payload": {"pr_event": "'"$event"'", "image_tag": "$(params.image_tag)"}}' https://api.github.com/repos/redhat-appstudio/clair-in-ci-db/dispatches
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
